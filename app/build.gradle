apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    def listSubFile = {
        def resFolder = 'src/main/res'
        def files = file(resFolder).listFiles()
        def folders = []
        files.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(resFolder))
        return folders
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            res.srcDirs += listSubFile()
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies

    implementation project(':domain')
    implementation project(':data')

    annotationProcessor dependencies.daggerCompiler
    implementation dependencies.dagger
    implementation dependencies.butterKnife
    implementation dependencies.recyclerView
    implementation dependencies.rxJava
    implementation dependencies.rxAndroid
    annotationProcessor dependencies.butterKnifeCompiler
    implementation dependencies.arrow

    //Development
    implementation dependencies.leakCanary
}

repositories {
    google()
}